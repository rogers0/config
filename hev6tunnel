#!/bin/sh
#
# Usage: http://ipv4.tunnelbroker.net/ipv4_end.php?ip=IPV4ADDR&pass=PASSKEY&user_id=USERID&tid=TUNNELID
#  -or-: https://USERNAME:PASSWORD@ipv4.tunnelbroker.net/ipv4_end.php?tid=TUNNELID (auto-detect IP)
#        https://USERNAME:PASSWORD@ipv4.tunnelbroker.net/ipv4_end.php?tid=TUNNELID&ip=IPV4ADDR
#
# IPV4ADDR: Your IPv4 endpoint.  Set to AUTO to determine your IP based on the IP you requested this page from.  Previously passed as ipv4b.
# PASSKEY : Your tunnel update key, or MD5 hash of your tunnelbroker.net password if a tunnel specific key is not set.  You may be able to 'echo -n YOURPASSWORD | md5sum' to produce the MD5 hash of your password.
# USERID  : The UserID shown on the main page of tunnelbroker.net when you log in.
# TUNNELID: The ID of the tunnel you're updating the endpoint on.  This can be found on the tunnel information page.  Previously referred to as the Global Tunnel ID / tunnel_id.
#
# The following parameters are only usable when accessing this script over https.
# USERNAME: Your tunnelbroker.net username.
# PASSWORD: Your tunnel update key, or tunnelbroker.net password if a tunnel specific key is not set.
#
# The legacy parameter names will continue to work for the forseable future.  Naming of them changed to be more in line with industry convention and their roles.

SCRIPT_ROOT=$(dirname $(readlink -f $0))
. ${SCRIPT_ROOT}/hev6tunnel.conf

GetInterfaceIP() {
	echo "$(/sbin/ifconfig $1 2>/dev/null|grep -E 'inet'|grep -v 'inet6'|awk '{ print $2}'|cut -d: -f2)"
}

if [ -z "${CONNECT_TIME}" -a "$1" != "stop" ]; then
	WGET="wget -4 -T10 -q -O -"
	IPV4ADDR=$(GetInterfaceIP "ppp0")
	[ "x$1" = "xppp0" -a -n "$4" ] && IPV4ADDR=$4
	LOCALIP=$IPV4ADDR
	if [ $NAT -eq 1 ]; then
		[ -n "$4" ] &&
			echo calling NAT mode in ppp script? &&
			exit 1
		IPV4ADDR=$($WGET http://whatismyip.org/|grep -Eo '\<[[:digit:]]{1,3}(\.[[:digit:]]{1,3}){3}\>') &&
			LOCALIP=$(GetInterfaceIP "eth0")
		echo \\\nyou need to add the following to your NAT gateway: \(suppose ppp0 is your gateway interface\)
		echo \\\tiptables -t nat -A PREROUTING -p 41 -i ppp0 -j DNAT --to $LOCALIP\\\n
	fi

	[ -n "$IPV4ADDR" ] && URL="https://ipv4.tunnelbroker.net/ipv4_end.php?ipv4b=$IPV4ADDR&pass=$PASSKEY&user_id=$USERID&tunnel_id=$TUNNELID"	# legacy API
	#URL="https://ipv4.tunnelbroker.net/ipv4_end.php?pass=$PASSKEY&user_id=$USERID&tunnel_id=$TUNNELID"		# legacy API
	#URL="https://$USERNAME:$PASSKEY@ipv4.tunnelbroker.net/nic/update?hostname=$TUNNELID"					# new API
	#URL="https://$USERNAME:$PASSKEY@ipv4.tunnelbroker.net/nic/update?hostname=$TUNNELID&myip=$IPV4ADDR"	# new API

	if [ -n "$URL" ]; then
		$WGET "$URL"
		sysctl -p /etc/sysctl.d/ipv6.conf > /dev/null 2>&1
		ip tunnel add hetunnel mode sit remote $REMOTEIP local $LOCALIP ttl 255
		ip link set hetunnel up mtu $MTU
		sysctl -p /etc/sysctl.d/ipv6.conf > /dev/null 2>&1
		ip -6 a add $IPV6ADDR dev hetunnel
		ip -6 r flush default
		ip -6 r add default dev hetunnel
	else
		echo failed to get IP or make URL to update HE tunnel config
	fi
elif [ -n "${CONNECT_TIME}" -o "$1" = "stop" ]; then
	if ifconfig hetunnel >/dev/null 2>&1; then
		ip -6 r del default dev hetunnel
		ip link set hetunnel down
		ip tunnel del hetunnel
	fi
	sysctl -p /etc/sysctl.d/no_ipv6.conf
fi

exit 0
